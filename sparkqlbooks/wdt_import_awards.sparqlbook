[
  {
    "kind": 1,
    "language": "markdown",
    "value": "# Inspect and import awards",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Number of persons in our population\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\n\r\nSELECT (COUNT(*) as ?n)\r\nWHERE {\r\n    GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n        {?s a wd:Q5.}\r\n}\r\n",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "### Explore imported awards",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Number of persons in our population\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX crm: <http://www.cidoc-crm.org/cidoc-crm/>\r\n\r\n\r\nSELECT (COUNT(*) as ?n)\r\nWHERE {\r\n    GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n        {?s a wd:Q618779.}\r\n}\r\n",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Properties of organisations\r\nPREFIX franzOption_defaultDatasetBehavior: <franz:rdf>\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX crm: <http://www.cidoc-crm.org/cidoc-crm/>\r\n\r\nSELECT ?p ?label (COUNT(*) as ?n)\r\nWHERE {\r\n    GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n        {?s a wd:Q618779;\r\n            ?p ?o.\r\n        OPTIONAL {?p rdfs:label ?label}    \r\n          }\r\n}\r\nGROUP BY ?p ?label\r\nORDER BY DESC(?n)",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "### Explore awards before import\n\nWe look for the awards received by our population",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Inspect the data to be imported\r\n\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nSELECT ?award  ?awardLabel (COUNT(*) as ?n)\r\nWHERE\r\n    {\r\n        GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n\r\n        ## Find the persons in the imported graph\r\n        {SELECT ?item\r\n        WHERE \r\n                {?item a wd:Q5.}\r\n        ORDER BY ?item      \r\n        OFFSET 0\r\n        #OFFSET 10000\r\n        LIMIT 10000\r\n\r\n        }\r\n        ## \r\n        SERVICE <https://query.wikidata.org/sparql>\r\n            {\r\n                ?item wdt:P166 ?award.\r\n                BIND (?awardLabel as ?awardLabel)\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } \r\n            }\r\n                \r\n        }\r\nGROUP BY ?award ?awardLabel    \r\nORDER BY DESC(?n)    \r\nLIMIT 10",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "### Import process",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Prepare the data to be imported\r\n\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nCONSTRUCT {?person wdt:P166 ?award.\r\n            ?award rdfs:label ?awardLabel}\r\nWHERE\r\n    {\r\n        GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n\r\n        ## Find the persons in the imported graph\r\n        {SELECT ?person\r\n        WHERE \r\n                {?person a wd:Q5.}\r\n        ORDER BY ?person      \r\n        OFFSET 0\r\n        #OFFSET 10000\r\n        LIMIT 10\r\n\r\n        }\r\n        ## \r\n        SERVICE <https://query.wikidata.org/sparql>\r\n            {\r\n                ?person wdt:P166 ?award.\r\n                BIND (?awardLabel as ?awardLabel)\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } \r\n            }\r\n                \r\n        }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### To be sure, the insert query has to be carried out directly on the Allegrograph server\r\n# but it also could work if executed in this notebook\r\n## Also, you have to carry it out in three steps. The accepted limit by Wikidata \r\n## of instances in a variable ('item' in our case) appears to be 10000.\r\n## You therefore have to have three steps for a population of around 32000 persons  \r\n\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nWITH  <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\nINSERT {?person wdt:P166 ?award.\r\n            ?award rdfs:label ?awardLabel}\r\nWHERE\r\n    {\r\n        \r\n        ## Find the persons in the imported graph\r\n        {SELECT ?person\r\n        WHERE \r\n                {?person a wd:Q5.}\r\n        ORDER BY ?person      \r\n        #OFFSET 10000\r\n        #OFFSET 20000\r\n        OFFSET 30000\r\n        LIMIT 10000\r\n\r\n        }\r\n        ## \r\n        SERVICE <https://query.wikidata.org/sparql>\r\n            {\r\n                ?person wdt:P166 ?award.\r\n                BIND (?awardLabel as ?awardLabel)\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } \r\n            }\r\n                \r\n        }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Insert the label of the property\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\n\r\n\r\nINSERT DATA {\r\n  GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n  {wdt:P166 rdfs:label 'award received'.}\r\n}",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "### Inspect the collected data",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "###  Number of different awards:\r\n\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\n\r\nSELECT (COUNT(*) as ?n)\r\nWHERE\r\n   {\r\n   SELECT DISTINCT ?award\r\n   WHERE {\r\n      GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n         {\r\n            ?s wdt:P166 ?award.\r\n         }\r\n      }\r\n   }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "###  Inspect the awards:\r\n# number of different awards\r\n\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\n\r\nSELECT ?award ?awardLabel (COUNT(*) as ?n)\r\nWHERE {\r\n      GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n         {\r\n            ?s wdt:P166 ?award.\r\n            ?award rdfs:label ?awardLabel\r\n         }\r\n   }\r\nGROUP BY ?award ?awardLabel\r\nORDER BY DESC(?n)\r\nLIMIT 20",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "### Add the award pseudo-class\n\n\nIn order to easily find 'awards', i.e. entities associated to persons with the relationship wdt:P166 award received\n\n",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Insert the class 'award' for all the awards\r\n# Please note that strictly speaking Wikidata has no ontology,\r\n# therefore no classes. We add this for our convenience\r\n\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\n\r\nWITH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\nINSERT {\r\n   ?award rdf:type wd:Q618779.\r\n}\r\nWHERE\r\n   {\r\n   SELECT DISTINCT ?award\r\n   WHERE {\r\n         {\r\n            ?s wdt:P166 ?award.\r\n         }\r\n      }\r\n   }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Insert the class 'award' for all the awards\r\n# Please note that strictly speaking Wikidata has no ontology,\r\n# therefore no classes. We add this for our convenience\r\n\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\n\r\nSELECT(COUNT(*) as ?number)\r\nWHERE {\r\n      GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md> {\r\n               ?award rdf:type wd:Q618779.\r\n\r\n      }\r\n}",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "### Inspect the other types of awards (property P166 instance of)",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Pseudo-classes: instance of\r\n\r\nPREFIX franzOption_defaultDatasetBehavior: <franz:rdf>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\n\r\nSELECT ?pseudoClass ?pseudoClassLabel (COUNT(*) as ?n)\r\nWHERE\r\n   {\r\n        {\r\n        SELECT DISTINCT ?award\r\n        WHERE {\r\n        GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n            {\r\n                # receive award\r\n                ?s wdt:P166 ?award.\r\n            }\r\n      }\r\n    }\r\n    SERVICE <https://query.wikidata.org/sparql>\r\n        {\r\n            ### instance of\r\n            ?award wdt:P31 ?pseudoClass.\r\n            BIND (?pseudoClassLabel as ?pseudoClassLabel)\r\n            SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } \r\n        }\r\n   }\r\n   GROUP BY ?pseudoClass ?pseudoClassLabel\r\n   ORDER BY DESC(?n)\r\n   LIMIT 30",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Additional information available on Wikidata",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Inspect the properties of awards in Wikidata\r\n\r\nPREFIX franzOption_serviceTimeout: <franz:240>\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nSELECT ?p ?propLabel (COUNT(*) as ?n)\r\nWHERE\r\n    {\r\n        GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n\r\n        ## Find the awards in the imported graph\r\n        {SELECT DISTINCT ?award\r\n        WHERE \r\n                {?award rdf:type wd:Q618779}\r\n        ORDER BY ?item      \r\n        LIMIT 200\r\n        }\r\n        ## \r\n        SERVICE <https://query.wikidata.org/sparql>\r\n            {\r\n                ?award ?p ?o.\r\n                # get the original property (in the the statement construct)     \r\n                ?prop wikibase:directClaim ?p .\r\n                BIND (?propLabel as ?propLabel)\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } \r\n            }\r\n                \r\n        }\r\nGROUP BY ?p ?propLabel    \r\nORDER BY DESC(?n)    \r\nLIMIT 30",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "### Instance of",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "## Group and count\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nSELECT ?pseudoClass ?pseudoClassLabel (COUNT(*) as ?n)\r\nWHERE\r\n    {\r\n        GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n\r\n        ## Find the awards in the imported graph\r\n        {SELECT DISTINCT ?award\r\n        WHERE \r\n                {?award rdf:type wd:Q618779}\r\n        ORDER BY ?award      \r\n        OFFSET 0\r\n        #OFFSET 10000\r\n        #OFFSET 20000\r\n       LIMIT 5000\r\n\r\n        }\r\n        ## \r\n        SERVICE <https://query.wikidata.org/sparql>\r\n            {\r\n                # instance of\r\n                ?award wdt:P31 ?pseudoClass.\r\n                BIND (?pseudoClassLabel as ?pseudoClassLabel)\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } \r\n            }\r\n                \r\n        }\r\nGROUP BY ?pseudoClass ?pseudoClassLabel\r\nORDER BY DESC(?n)\r\nLIMIT 10\r\n",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Prepare the data to be imported\r\n# With LIMIT clause \r\n## Apparently labels are not repeated if already available\r\n# We therefore car integrate them directly in the INSERT below\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nCONSTRUCT {?award wdt:P31 ?pseudoClass.\r\n            ?pseudoClass rdfs:label ?pseudoClassLabel}\r\nWHERE\r\n    {\r\n        GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n\r\n        ## Find the awards in the imported graph\r\n        {SELECT ?award\r\n        WHERE \r\n                {?award rdf:type wd:Q618779}\r\n        ORDER BY ?award      \r\n        LIMIT 10\r\n\r\n        }\r\n        ## \r\n        SERVICE <https://query.wikidata.org/sparql>\r\n            {\r\n                # instance of\r\n                ?award wdt:P31 ?pseudoClass.\r\n                ### NB : we exclude the type 'Award' because\r\n                # we use this as a class\r\n                MINUS {?award wdt:P31 wd:Q618779}\r\n                BIND (?pseudoClassLabel as ?pseudoClassLabel)\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } \r\n            }\r\n                \r\n        }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Prepare the data to be imported\r\n# With LIMIT clause \r\n## Apparently labels are not repeated if already available\r\n# We therefore car integrate them directly in the INSERT below\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nWITH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\nINSERT {?award wdt:P31 ?pseudoClass.\r\n            ?pseudoClass rdfs:label ?pseudoClassLabel}\r\nWHERE\r\n    {\r\n        \r\n        ## Find the awards in the imported graph\r\n        {SELECT ?award\r\n        WHERE \r\n                {?award rdf:type wd:Q618779}\r\n        ORDER BY ?award      \r\n        \r\n\r\n        }\r\n        ## \r\n        SERVICE <https://query.wikidata.org/sparql>\r\n            {\r\n                # instance of\r\n                ?award wdt:P31 ?pseudoClass.\r\n                ### NB : we exclude the type 'Award' because\r\n                # we use this as a class\r\n                MINUS {?award wdt:P31 wd:Q618779}\r\n                BIND (?pseudoClassLabel as ?pseudoClassLabel)\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } \r\n            }\r\n                \r\n        }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "## Group and count\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nSELECT ?pseudoClass ?pseudoClassLabel (COUNT(*) as ?n)\r\nWHERE\r\n    {\r\n        GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n\r\n        {?award rdf:type wd:Q618779;\r\n            wdt:P31 ?pseudoClass.\r\n          ?pseudoClass  rdfs:label ?pseudoClassLabel.\r\n                }\r\n                \r\n        }\r\nGROUP BY ?pseudoClass ?pseudoClassLabel\r\nORDER BY DESC(?n)\r\nLIMIT 10\r\n",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "### Award taxonomy (property P279 subclass of) ",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Taxonomy: subclass of\r\n\r\nPREFIX franzOption_defaultDatasetBehavior: <franz:rdf>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\n\r\nSELECT ?pseudoClass ?pseudoClassLabel (COUNT(*) as ?n)\r\nWHERE\r\n   {\r\n        {\r\n        SELECT DISTINCT ?award\r\n        WHERE {\r\n        GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n            {\r\n                ?s wdt:P166 ?award.\r\n            }\r\n      }\r\n    }\r\n    SERVICE <https://query.wikidata.org/sparql>\r\n        {\r\n            ### subclass of\r\n            ?award wdt:P279 ?pseudoClass.\r\n            BIND (?pseudoClassLabel as ?pseudoClassLabel)\r\n            SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } \r\n        }\r\n   }\r\n   GROUP BY ?pseudoClass ?pseudoClassLabel\r\n   having (?n = 8)\r\n   #ORDER BY DESC(?n)\r\n   ORDER BY ?n\r\n   LIMIT 10",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Prepare the data to be imported\r\n# With LIMIT clause \r\n## Apparently labels are not repeated if already available\r\n# We therefore car integrate them directly in the INSERT below\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nCONSTRUCT {?award wdt:P279 ?pseudoClass.\r\n            ?pseudoClass rdfs:label ?pseudoClassLabel}\r\nWHERE\r\n    {\r\n        GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n\r\n        ## Find the awards in the imported graph\r\n        {SELECT ?award\r\n        WHERE \r\n                {?award rdf:type wd:Q618779}\r\n        ORDER BY ?award      \r\n        OFFSET 0\r\n        #OFFSET 10000\r\n        #OFFSET 20000\r\n       LIMIT 10\r\n\r\n        }\r\n        ## \r\n        SERVICE <https://query.wikidata.org/sparql>\r\n            {\r\n                ### subclass of\r\n                ?award wdt:P279 ?pseudoClass.\r\n                BIND (?pseudoClassLabel as ?pseudoClassLabel)\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } \r\n            }\r\n                \r\n        }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Prepare the data to be imported\r\n# With LIMIT clause \r\n## Apparently labels are not repeated if already available\r\n# We therefore car integrate them directly in the INSERT below\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nWITH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\nINSERT {?award wdt:P279 ?pseudoClass.\r\n            ?pseudoClass rdfs:label ?pseudoClassLabel}\r\nWHERE\r\n    {\r\n        \r\n        ## Find the awards in the imported graph\r\n        {SELECT ?award\r\n        WHERE \r\n                {?award rdf:type wd:Q618779}\r\n        ORDER BY ?award      \r\n        #LIMIT 10\r\n\r\n        }\r\n        ## \r\n        SERVICE <https://query.wikidata.org/sparql>\r\n            {\r\n                ### subclass of\r\n                ?award wdt:P279 ?pseudoClass.\r\n                BIND (?pseudoClassLabel as ?pseudoClassLabel)\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } \r\n            }\r\n                \r\n        }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Taxonomy: subclass of\r\n\r\nPREFIX franzOption_defaultDatasetBehavior: <franz:rdf>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\n\r\nSELECT ?pseudoClass ?pseudoClassLabel (COUNT(*) as ?n)\r\nWHERE\r\n   {\r\n        GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n            {\r\n                ?person wdt:P166 ?award.\r\n                ?award wdt:P279 ?pseudoClass.\r\n                ?pseudoClass rdfs:label ?pseudoClassLabel.\r\n            }\r\n      }    \r\n   GROUP BY ?pseudoClass ?pseudoClassLabel\r\n   ORDER BY DESC(?n)\r\n   LIMIT 10",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "### Award country",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "## Group and count\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nSELECT ?country ?countryLabel (COUNT(*) as ?n)\r\nWHERE\r\n    {\r\n        GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n\r\n        ## Find the awards in the imported graph\r\n        {SELECT ?item\r\n        WHERE \r\n                {?item rdf:type wd:Q618779}\r\n        ORDER BY ?item      \r\n        OFFSET 0\r\n        #OFFSET 10000\r\n        #OFFSET 20000\r\n       LIMIT 5000\r\n\r\n        }\r\n        ## \r\n        SERVICE <https://query.wikidata.org/sparql>\r\n            {\r\n                # country\r\n                ?item wdt:P17 ?country.\r\n                BIND (?countryLabel as ?countryLabel)\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } \r\n            }\r\n                \r\n        }\r\nGROUP BY ?country ?countryLabel\r\nORDER BY DESC(?n)\r\nLIMIT 10\r\n",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Prepare the data to be imported\r\n# With LIMIT clause \r\n## Apparently labels are not repeated if already available\r\n# We therefore car integrate them directly in the INSERT below\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nCONSTRUCT {?award wdt:P17 ?country.\r\n            ?country rdfs:label ?countryLabel}\r\nWHERE\r\n    {\r\n        GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n\r\n        ## Find the awards in the imported graph\r\n        {SELECT ?award\r\n        WHERE \r\n                {?award rdf:type wd:Q618779}\r\n        ORDER BY ?award      \r\n        OFFSET 0\r\n        #OFFSET 10000\r\n        #OFFSET 20000\r\n       LIMIT 10\r\n\r\n        }\r\n        ## \r\n        SERVICE <https://query.wikidata.org/sparql>\r\n            {\r\n                # country\r\n                ?award wdt:P17 ?country.\r\n                BIND (?countryLabel as ?countryLabel)\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } \r\n            }\r\n                \r\n        }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Prepare the data to be imported\r\n# With LIMIT clause \r\n## Apparently labels are not repeated if already available\r\n# We therefore car integrate them directly in the INSERT below\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nWITH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\nINSERT {?award wdt:P17 ?country.\r\n            ?country rdfs:label ?countryLabel}\r\nWHERE\r\n    {\r\n        \r\n        ## Find the awards in the imported graph\r\n        {SELECT ?award\r\n        WHERE \r\n                {?award rdf:type wd:Q618779}\r\n        ORDER BY ?award      \r\n        #LIMIT 10\r\n\r\n        }\r\n        ## \r\n        SERVICE <https://query.wikidata.org/sparql>\r\n            {\r\n                # country\r\n                ?award wdt:P17 ?country.\r\n                BIND (?countryLabel as ?countryLabel)\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } \r\n            }\r\n                \r\n        }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Prepare the data to be imported\r\n# With LIMIT clause \r\n## Apparently labels are not repeated if already available\r\n# We therefore car integrate them directly in the INSERT below\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nCONSTRUCT {?award wdt:P17 ?country.\r\n            ?country rdfs:label ?countryLabel}\r\nWHERE\r\n    {\r\n        GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n\r\n        ## Find the awards in the imported graph\r\n        {SELECT ?award\r\n        WHERE \r\n                {?award rdf:type wd:Q618779}\r\n        ORDER BY ?award      \r\n        OFFSET 0\r\n        #OFFSET 10000\r\n        #OFFSET 20000\r\n       LIMIT 10\r\n\r\n        }\r\n        ## \r\n        SERVICE <https://query.wikidata.org/sparql>\r\n            {\r\n                # country\r\n                ?award wdt:P17 ?country.\r\n                BIND (?countryLabel as ?countryLabel)\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } \r\n            }\r\n                \r\n        }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Prepare the data to be imported\r\n# With LIMIT clause \r\n## Apparently labels are not repeated if already available\r\n# We therefore car integrate them directly in the INSERT below\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nWITH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\nINSERT {?award wdt:P17 ?country.\r\n            ?country rdfs:label ?countryLabel}\r\nWHERE\r\n    {\r\n        \r\n        ## Find the awards in the imported graph\r\n        {SELECT ?award\r\n        WHERE \r\n                {?award rdf:type wd:Q618779}\r\n        ORDER BY ?award      \r\n        #LIMIT 10\r\n\r\n        }\r\n        ## \r\n        SERVICE <https://query.wikidata.org/sparql>\r\n            {\r\n                # country\r\n                ?award wdt:P17 ?country.\r\n                BIND (?countryLabel as ?countryLabel)\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } \r\n            }\r\n                \r\n        }",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "### Explore countries with awards",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "#### Add missing country pseudoClass\n\nThis allows to identity all countries without the class Country",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "## Find countries without the pseudoClass : Country\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nSELECT DISTINCT ?country ?countryLabel ?type \r\nWHERE\r\n    {\r\n        GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n\r\n        {?award rdf:type wd:Q618779;\r\n                   wdt:P17 ?country.\r\n                   FILTER NOT EXISTS {?country a ?type}\r\n                   # internationality, in fact no country\r\n                   FILTER (?country != wd:Q1072012) \r\n                 ?country rdfs:label ?countryLabel \r\n                 \r\n                  \r\n        }         \r\n              \r\n                \r\n    }\r\n",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Add the pseudoClass\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nWITH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\nINSERT {?country a wd:Q6256}\r\nWHERE\r\n    {\r\n        ?award rdf:type wd:Q618779;\r\n                   wdt:P17 ?country.\r\n        FILTER NOT EXISTS {?country a ?type}\r\n        # internationality, in fact no country\r\n        FILTER (?country != wd:Q1072012)\r\n    }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "## Find the awards countries\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nSELECT DISTINCT ?country ?countryLabel (COUNT(*) as ?number)\r\nWHERE\r\n    {\r\n        GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n\r\n        {?award rdf:type wd:Q618779;\r\n                   wdt:P17 ?country.\r\n                 ?country rdfs:label ?countryLabel.\r\n                 \r\n                  \r\n        }         \r\n              \r\n                \r\n    }\r\nGROUP BY  ?country ?countryLabel \r\nORDER BY ?number\r\n#ORDER BY DESC(?number)\r\nLIMIT 30 \r\n",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "### Award conferred by organisation (property P1027 conferred by)",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "## Group and count\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nSELECT ?organisation ?organisationLabel (COUNT(*) as ?n)\r\nWHERE\r\n    {\r\n        GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n\r\n        ## Find the awards in the imported graph\r\n        {SELECT ?item\r\n        WHERE \r\n                {?item rdf:type wd:Q618779}\r\n        ORDER BY ?item      \r\n        OFFSET 0\r\n        #OFFSET 10000\r\n        #OFFSET 20000\r\n       LIMIT 5000\r\n\r\n        }\r\n        ## \r\n        SERVICE <https://query.wikidata.org/sparql>\r\n            {\r\n                # conferred by\r\n                ?item wdt:P1027 ?organisation.\r\n                BIND (?organisationLabel as ?organisationLabel)\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } \r\n            }\r\n                \r\n        }\r\nGROUP BY ?organisation ?organisationLabel\r\nORDER BY DESC(?n)\r\nLIMIT 10\r\n",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Prepare the data to be imported\r\n# With LIMIT clause \r\n## Apparently labels are not repeated if already available\r\n# We therefore car integrate them directly in the INSERT below\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nCONSTRUCT {?item wdt:P1027 ?organisation.\r\n            ?organisation rdfs:label ?organisationLabel}\r\nWHERE\r\n    {\r\n        GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n\r\n        ## Find the awards in the imported graph\r\n        {SELECT ?item\r\n        WHERE \r\n                {?item rdf:type wd:Q618779}\r\n        ORDER BY ?item      \r\n        OFFSET 0\r\n        #OFFSET 10000\r\n        #OFFSET 20000\r\n       LIMIT 10\r\n\r\n        }\r\n        ## \r\n        SERVICE <https://query.wikidata.org/sparql>\r\n            {\r\n                # conferred by\r\n                ?item wdt:P1027 ?organisation.\r\n                BIND (?organisationLabel as ?organisationLabel)\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } \r\n            }\r\n                \r\n        }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Prepare the data to be imported\r\n# With LIMIT clause \r\n## Apparently labels are not repeated if already available\r\n# We therefore car integrate them directly in the INSERT below\r\n\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\n\r\nWITH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\nINSERT {?award wdt:P1027 ?organisation.\r\n            ?organisation rdfs:label ?organisationLabel}\r\nWHERE\r\n    {\r\n        GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n\r\n        ## Find the awards in the imported graph\r\n        {SELECT ?award\r\n        WHERE \r\n                {?award rdf:type wd:Q618779}\r\n        ORDER BY ?award      \r\n        \r\n\r\n        }\r\n        ## \r\n        SERVICE <https://query.wikidata.org/sparql>\r\n            {\r\n                # conferred by\r\n                ?award wdt:P1027 ?organisation.\r\n                BIND (?organisationLabel as ?organisationLabel)\r\n                SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } \r\n            }\r\n                \r\n        }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Taxonomy: subclass of\r\n\r\nPREFIX franzOption_defaultDatasetBehavior: <franz:rdf>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\n\r\nSELECT ?organisation ?organisationLabel (COUNT(*) as ?n)\r\nWHERE\r\n    {\r\n        GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n            {\r\n               ?award rdf:type wd:Q618779;\r\n                # conferred by\r\n                wdt:P1027 ?organisation.\r\n                ?organisation rdfs:label ?organisationLabel\r\n            }\r\n      \r\n    }\r\n   GROUP BY ?organisation ?organisationLabel\r\n   ORDER BY DESC(?n)\r\n   LIMIT 30",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Insert the label of the property\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\n\r\n\r\nINSERT DATA {\r\n  GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n  {wdt:P1027 rdfs:label 'conferred by'.}\r\n}",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "## Prepare queries for analysis",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Propriétés des awards\r\n\r\nPREFIX franzOption_defaultDatasetBehavior: <franz:rdf>\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\n\r\nSELECT ?p ?label (COUNT(*) as ?n)\r\nWHERE {\r\n    GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n        {?award a wd:Q618779;\r\n                ?p ?o.\r\n        OPTIONAL {?p rdfs:label ?label}    \r\n          }\r\n}\r\nGROUP BY ?p ?label\r\nORDER BY DESC(?n)",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "###  \r\n\r\nPREFIX wikibase: <http://wikiba.se/ontology#>\r\nPREFIX bd: <http://www.bigdata.com/rdf#>\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\n\r\nSELECT ?person (MIN(?pLabel) AS ?personLabel)\r\n        (MIN(?birthYear) AS ?birthYear)\r\n      ?award (MIN(?aLabel) AS ?awardLabel)         \r\n   (COUNT(*) as ?n)\r\n   (GROUP_CONCAT(DISTINCT ?organisationLabel; separator=\" | \") AS ?organisations) \r\n   (GROUP_CONCAT(DISTINCT ?parentTermLabel; separator=\" | \") AS ?domains) \r\n   (GROUP_CONCAT(DISTINCT ?countryLabel; separator=\" | \") AS ?countries) \r\n   (GROUP_CONCAT(DISTINCT ?pseudoClassLabel; separator=\" | \") AS ?pseudoClasses) \r\n  \r\nWHERE {\r\n      GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n         {\r\n            ?person wdt:P166 ?award;\r\n                     rdfs:label ?pLabel;\r\n                     wdt:P569 ?birthYear.\r\n            ?award rdf:type wd:Q618779;\r\n                  rdfs:label ?aLabel.\r\n            # has country      \r\n            OPTIONAL {?award wdt:P17 ?country.\r\n                ?country rdfs:label ?countryLabel    \r\n             }\r\n            #  instance of\r\n            {?award wdt:P31 ?pseudoClass.\r\n                ?pseudoClass rdfs:label ?pseudoClassLabel. \r\n             }\r\n            # conferred by\r\n            OPTIONAL {?award wdt:P1027 ?organisation.\r\n                ?organisation rdfs:label ?organisationLabel    \r\n             }  \r\n            # subclass of\r\n            OPTIONAL \r\n            {?award wdt:P279 ?parentTerm.\r\n                ?parentTerm rdfs:label ?parentTermLabel    \r\n             }   \r\n\r\n         }\r\n   }\r\nGROUP BY ?person ?award \r\nORDER BY DESC(?pseudoClasses)\r\nLIMIT 20",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "### Propriétés des awards\r\n\r\nPREFIX franzOption_defaultDatasetBehavior: <franz:rdf>\r\nPREFIX wd: <http://www.wikidata.org/entity/>\r\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\r\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\r\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\r\n\r\nSELECT ?awardType ?awardTypeLabel (COUNT(*) as ?n)\r\nWHERE {\r\n    GRAPH <https://github.com/TanguyGodat/Judges/blob/main/graphs/wikidata_imported_data.md>\r\n        {\r\n        ?award wdt:P31 ?awardType;\r\n            a wd:Q618779.\r\n        ?awardType rdfs:label ?awardTypeLabel.\r\n        }\r\n}\r\nGROUP BY ?awardType ?awardTypeLabel\r\nORDER BY DESC(?n)",
    "metadata": {}
  }
]